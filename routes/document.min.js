var express=require("express"),router=express.Router();const fs=require("fs"),s3=require("s3-client"),s3_client=s3.createClient({s3Options:{region:"us-west-1",accessKeyId:process.env.aws_access_key_id,secretAccessKey:process.env.aws_secret_access_key}});router.post("/:document_id",function(e,s,n){const t=e.params.document_id;let o=JSON.parse(e.body);JSON.parse(o)&&(o=JSON.stringify(JSON.parse(o),null,2));const r=`documents/${t}.json`;fs.writeFile(r,o,function(e){if(e)return console.log(e);if("prod"===process.env.environment){const e={localFile:r,s3Params:{Bucket:"static.everything.io",Key:`permy.link/${r}`}},n=s3_client.uploadFile(e);n.on("error",function(e){s.status(500).send(e)}),n.on("end",function(){s.send(`Saved ${o} as ${t}.json`)})}else s.send(`Saved ${o} as ${t}.json`)})}),router.get("/:document_id/raw",function(e,s,n){get_document(e,s,n,!0)}),router.get("/:document_id",function(e,s,n){get_document(e,s,n,!1)});const get_document=(e,s,n,t=!1)=>{const o=e.params.document_id,r=`documents/${o}.json`,c=()=>{fs.readFile(r,"utf8",(e,n)=>{if(e)return console.error(e),void s.status(500).send(e);try{if(t){s.setHeader("Content-Type","application/json");const e=JSON.stringify(JSON.parse(n),null,2);s.send(e)}else s.send(n)}catch(e){s.status(500).send(e)}})};if("prod"!==process.env.environment||fs.existsSync(r))c();else{const e=downloader_for_s3(r);e.on("error",e=>{console.log(e),s.status(500).send(e)}),e.on("end",c)}},downloader_for_s3=e=>{const s={localFile:e,s3Params:{Bucket:"static.everything.io",Key:`permy.link/${e}`}};return s3_client.downloadFile(s)};module.exports=router;